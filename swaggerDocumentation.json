{
  "swagger": "2.0",
  "info": {
    "description": "inApp-api-statistics",
    "version": "1.0.0",
    "title": "inApp-api-statistics",
    "contact": {
      "email": "no@email.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "statistics_group",
      "description": "Table header_bidder.statistic_group"
    },
    {
      "name": "statistics",
      "description": "Table header_bidder.statistic"
    }
  ],
  "paths": {
    "/statistics": {
      "get": {
        "summary": "whole table",
        "produces": ["application/json"],
        "tags": ["statistics"],
        "responses": {
          "200": {
            "description": "By calling /statistics you will receive the full table /statistics"
          }
        },
        "deprecated": false
      }
    },
    "/statistics/query": {
      "get": {
        "summary": "select from statistics",
        "produces": ["application/json"],
        "tags": ["statistics"],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "if date is passed then \"from\", \"to\" or \"equal\" is needed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "where",
            "description": "adds a field after WHERE",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "equal",
            "description": "WHERE \"field\" will equal \"equal\". Depending on the field the input can be UInt16, 32, 64 or decimal(18,6) or date(yyyy-mm-dd).",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "WHERE \"field\" is greater or equal \"equal\". If both \"from\" and \"to\" are filled than between will be in query. Depending on the field the input can be UInt16, 32, 64 or decimal(18,6) or date(yyyy-mm-dd).",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "to",
            "description": "WHERE \"field\" is less or equal \"equal\". If both \"from\" and \"to\" are filled than between will be in query. Depending on the field the input can be UInt16, 32, 64 or decimal(18,6) or date(yyyy-mm-dd).",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "order",
            "description": "ORDER field. If is not empty than BY must be filled.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "by",
            "description": "BY descending or ascending",
            "required": false,
            "type": "string",
            "enum": ["DESC", "ASC"]
          },
          {
            "in": "query",
            "name": "format",
            "description": "FORMAT if not passed than json will be returned",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "By calling /statistics you will receive only one row"
          }
        },
        "deprecated": false
      }
    },
    "/statistics_group": {
      "get": {
        "summary": "whole table",
        "produces": ["application/json"],
        "tags": ["statistics_group"],
        "responses": {
          "200": {
            "description": "By calling /statistics_group you will receive the full table /statistics_group"
          }
        },
        "deprecated": false
      }
    },
    "/statistics_group/query": {
      "get": {
        "summary": "select from statistics_group",
        "produces": ["application/json"],
        "tags": ["statistics_group"],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "if date is passed then \"from\", \"to\" or \"equal\" is needed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "where",
            "description": "adds a field after WHERE",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "equal",
            "description": "WHERE \"field\" will equal \"equal\". Depending on the field the input can be UInt16, 32, 64 or decimal(18,6) or date(yyyy-mm-dd).",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "WHERE \"field\" is greater or equal \"equal\". If both \"from\" and \"to\" are filled than between will be in query. Depending on the field the input can be UInt16, 32, 64 or decimal(18,6) or date(yyyy-mm-dd).",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "to",
            "description": "WHERE \"field\" is less or equal \"equal\". If both \"from\" and \"to\" are filled than between will be in query. Depending on the field the input can be UInt16, 32, 64 or decimal(18,6) or date(yyyy-mm-dd).",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "order",
            "description": "ORDER field. If is not empty than BY must be filled.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "by",
            "description": "BY descending or ascending",
            "required": false,
            "type": "string",
            "enum": ["DESC", "ASC"]
          },
          {
            "in": "query",
            "name": "format",
            "description": "FORMAT if not passed than json will be returned",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "By calling /statistics_group you will receive only one row"
          }
        },
        "deprecated": false
      }
    },
    "/inventory": {
      "get": {
        "tags": ["developers"],
        "summary": "searches inventory",
        "operationId": "searchInventory",
        "description": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "searchString",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "number of records to skip for pagination",
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "limit",
            "description": "maximum number of records to return",
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 50
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryItem"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": ["admins"],
        "summary": "adds an inventory item",
        "operationId": "addInventory",
        "description": "Adds an item to the system",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "inventoryItem",
            "description": "Inventory item to add",
            "schema": {
              "$ref": "#/definitions/InventoryItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    }
  },
  "definitions": {
    "InventoryItem": {
      "type": "object",
      "required": ["id", "name", "manufacturer", "releaseDate"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "name": {
          "type": "string",
          "example": "Widget Adapter"
        },
        "releaseDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-29 09:12:33 UTC"
        },
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        }
      }
    },
    "Manufacturer": {
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "example": "ACME Corporation"
        },
        "homePage": {
          "type": "string",
          "format": "url",
          "example": "https://www.acme-corp.com"
        },
        "phone": {
          "type": "string",
          "example": "408-867-5309"
        }
      }
    }
  }
}
